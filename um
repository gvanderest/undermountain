#!/usr/bin/env python
"""Undermountain Startup Script"""
from mud.game import Game
from utils.hash import get_random_hash

import datetime
import gevent
import sys
import settings


def get_python_version():
    major, minor, micro, _, _ = sys.version_info
    return ".".join(map(str, [major, minor, micro]))


def display_banner():
    try:
        VERSION = open("VERSION", "r").read().strip()
    except Exception:
        VERSION = None

    banner_lines = (
        (
            """\
      __ _______
     /  /       \ """
            + (64 * "-")
            + """
    /  /  /  /  /    Undermountain Python MUD Server v{} - Python v{}
    \____/__/__/ """
            + (65 * "-")
            + "\n"
        )
        .format(VERSION, get_python_version())
        .split("\n")
    )

    for line in banner_lines:
        print(line)


def start_game():
    display_banner()

    print("Loaded settings from {}".format(settings.__file__))

    GAME = Game()
    try:
        task = gevent.spawn(GAME.start)
        task.join()
    except KeyboardInterrupt:
        GAME.stop()


def display_help():
    print(
        """\
Commands:
./um start - Start the game
./um backup [id] - Backup data with identifier
./um restore <id|path> - Restore data with identifier or file path

For backups, see the 'backups' folder
"""
    )


def backup_data(backup_id):
    """Backup the data folder to a specific ID file."""
    import tarfile
    import os
    import os.path

    backup_path = "{}/{}.tar.gz".format(settings.BACKUPS_FOLDER, backup_id)

    if os.path.exists(backup_path):
        os.remove(backup_path)

    backup = tarfile.open(backup_path, "w:gz")
    folder_name = settings.DATA_FOLDER.split("/")[-1]
    backup.add(settings.DATA_FOLDER, arcname=folder_name)

    print("Backup ID generated: {}".format(backup_id))
    print("Backup saved to {}".format(backup_path))
    print("Backed up {} files.".format(len(backup.getnames())))

    backup.close()


def restore_data(backup_id):
    """Restore the data folder from a specific ID file."""
    import os
    import os.path
    import shutil
    import tarfile

    if "." in backup_id:
        backup_path = backup_id
    else:
        backup_path = "{}/{}.tar.gz".format(settings.BACKUPS_FOLDER, backup_id)
        print("Restoring backup ID: {}".format(backup_id))

    print("Restoring backup path: {}".format(backup_path))

    backup = tarfile.open(backup_path, "r:gz")
    if os.path.exists(settings.DATA_FOLDER):
        shutil.rmtree(settings.DATA_FOLDER)
    os.mkdir(settings.DATA_FOLDER)
    backup.extractall()

    print("Restored {} files.".format(len(backup.getnames())))

    backup.close()


def display_invalid():
    print("Error: Invalid arguments provided.")
    print("")
    display_help()


ARGS = sys.argv
if len(ARGS) == 1:
    display_help()
    sys.exit(0)
elif ARGS[1] == "start":
    start_game()
elif ARGS[1] == "backup":
    date = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
    backup_id = "{}{}".format(date, get_random_hash()[:6])
    if len(ARGS) == 3:
        backup_id = ARGS[2]
    backup_data(backup_id)
elif ARGS[1] == "restore":
    backup_id = ARGS[2]
    restore_data(backup_id)
else:
    display_invalid()
    sys.exit(1)
